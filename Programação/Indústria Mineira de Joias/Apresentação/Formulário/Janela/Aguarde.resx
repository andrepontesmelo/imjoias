<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCABQACsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9UDMgGScD1rl/HXxL0L4c29pca9dGzgunaOOVh8u8DO3Pqe1f
        LP7bnj/WvAXxa+E9zZavrWj6PI9ydQktZ3is5tu0xo7ZxvyDwRkg9aj8XftR6Z8QfC6aFI2lCKbAuXuZ
        1cuPRQeBn1rGdWMNG9Tto4WdRKaV11O78WftIavf6hHJ4auPD9vpkP70i6vwZp2B4jIAIVWGckZIwOa6
        7wl+0zoF7DDDrrwaVeFN0jR3Cywg56ZHP6V8c+KvCGneK2tl0TXtB0qGNCJAZUTOf90ZyOevrV/XPC/h
        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
        FnGZhGAx969qg5OmnJWZ8vj3TdZypyvc/9k=
</value>
  </data>
</root>