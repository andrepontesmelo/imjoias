<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        59+wBT3HA2OyzQAAAABJRU5ErkJggg==
</value>
  </data>
</root>