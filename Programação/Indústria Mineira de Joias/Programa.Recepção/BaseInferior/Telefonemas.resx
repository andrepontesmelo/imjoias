<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tÃ­tuloBaseInferior.Imagem" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>