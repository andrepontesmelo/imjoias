<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>