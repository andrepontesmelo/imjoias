<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        u8Q8+gAAAABJRU5ErkJggg==
</value>
  </data>
</root>