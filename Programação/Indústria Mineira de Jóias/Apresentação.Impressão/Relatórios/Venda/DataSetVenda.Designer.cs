//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Apresentação.Impressão.Relatórios.Venda {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetVenda")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetVenda : global::System.Data.DataSet {
        
        private InformaçõesDataTable tableInformações;
        
        private ItensDataTable tableItens;
        
        private ModoPagamentoDataTable tableModoPagamento;
        
        private DébitoDataTable tableDébito;
        
        private PagamentosDataTable tablePagamentos;
        
        private CréditoDataTable tableCrédito;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetVenda() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetVenda(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Informações"] != null)) {
                    base.Tables.Add(new InformaçõesDataTable(ds.Tables["Informações"]));
                }
                if ((ds.Tables["Itens"] != null)) {
                    base.Tables.Add(new ItensDataTable(ds.Tables["Itens"]));
                }
                if ((ds.Tables["ModoPagamento"] != null)) {
                    base.Tables.Add(new ModoPagamentoDataTable(ds.Tables["ModoPagamento"]));
                }
                if ((ds.Tables["Débito"] != null)) {
                    base.Tables.Add(new DébitoDataTable(ds.Tables["Débito"]));
                }
                if ((ds.Tables["Pagamentos"] != null)) {
                    base.Tables.Add(new PagamentosDataTable(ds.Tables["Pagamentos"]));
                }
                if ((ds.Tables["Crédito"] != null)) {
                    base.Tables.Add(new CréditoDataTable(ds.Tables["Crédito"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InformaçõesDataTable Informações {
            get {
                return this.tableInformações;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItensDataTable Itens {
            get {
                return this.tableItens;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ModoPagamentoDataTable ModoPagamento {
            get {
                return this.tableModoPagamento;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DébitoDataTable Débito {
            get {
                return this.tableDébito;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PagamentosDataTable Pagamentos {
            get {
                return this.tablePagamentos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CréditoDataTable Crédito {
            get {
                return this.tableCrédito;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetVenda cln = ((DataSetVenda)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Informações"] != null)) {
                    base.Tables.Add(new InformaçõesDataTable(ds.Tables["Informações"]));
                }
                if ((ds.Tables["Itens"] != null)) {
                    base.Tables.Add(new ItensDataTable(ds.Tables["Itens"]));
                }
                if ((ds.Tables["ModoPagamento"] != null)) {
                    base.Tables.Add(new ModoPagamentoDataTable(ds.Tables["ModoPagamento"]));
                }
                if ((ds.Tables["Débito"] != null)) {
                    base.Tables.Add(new DébitoDataTable(ds.Tables["Débito"]));
                }
                if ((ds.Tables["Pagamentos"] != null)) {
                    base.Tables.Add(new PagamentosDataTable(ds.Tables["Pagamentos"]));
                }
                if ((ds.Tables["Crédito"] != null)) {
                    base.Tables.Add(new CréditoDataTable(ds.Tables["Crédito"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableInformações = ((InformaçõesDataTable)(base.Tables["Informações"]));
            if ((initTable == true)) {
                if ((this.tableInformações != null)) {
                    this.tableInformações.InitVars();
                }
            }
            this.tableItens = ((ItensDataTable)(base.Tables["Itens"]));
            if ((initTable == true)) {
                if ((this.tableItens != null)) {
                    this.tableItens.InitVars();
                }
            }
            this.tableModoPagamento = ((ModoPagamentoDataTable)(base.Tables["ModoPagamento"]));
            if ((initTable == true)) {
                if ((this.tableModoPagamento != null)) {
                    this.tableModoPagamento.InitVars();
                }
            }
            this.tableDébito = ((DébitoDataTable)(base.Tables["Débito"]));
            if ((initTable == true)) {
                if ((this.tableDébito != null)) {
                    this.tableDébito.InitVars();
                }
            }
            this.tablePagamentos = ((PagamentosDataTable)(base.Tables["Pagamentos"]));
            if ((initTable == true)) {
                if ((this.tablePagamentos != null)) {
                    this.tablePagamentos.InitVars();
                }
            }
            this.tableCrédito = ((CréditoDataTable)(base.Tables["Crédito"]));
            if ((initTable == true)) {
                if ((this.tableCrédito != null)) {
                    this.tableCrédito.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetVenda";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetVenda.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInformações = new InformaçõesDataTable();
            base.Tables.Add(this.tableInformações);
            this.tableItens = new ItensDataTable();
            base.Tables.Add(this.tableItens);
            this.tableModoPagamento = new ModoPagamentoDataTable();
            base.Tables.Add(this.tableModoPagamento);
            this.tableDébito = new DébitoDataTable();
            base.Tables.Add(this.tableDébito);
            this.tablePagamentos = new PagamentosDataTable();
            base.Tables.Add(this.tablePagamentos);
            this.tableCrédito = new CréditoDataTable();
            base.Tables.Add(this.tableCrédito);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInformações() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItens() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeModoPagamento() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDébito() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePagamentos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCrédito() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetVenda ds = new DataSetVenda();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void InformaçõesRowChangeEventHandler(object sender, InformaçõesRowChangeEvent e);
        
        public delegate void ItensRowChangeEventHandler(object sender, ItensRowChangeEvent e);
        
        public delegate void ModoPagamentoRowChangeEventHandler(object sender, ModoPagamentoRowChangeEvent e);
        
        public delegate void DébitoRowChangeEventHandler(object sender, DébitoRowChangeEvent e);
        
        public delegate void PagamentosRowChangeEventHandler(object sender, PagamentosRowChangeEvent e);
        
        public delegate void CréditoRowChangeEventHandler(object sender, CréditoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InformaçõesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnfuncionário;
            
            private global::System.Data.DataColumn columnpessoa;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columncotação;
            
            private global::System.Data.DataColumn columncontrole;
            
            private global::System.Data.DataColumn columnvalorTotal;
            
            private global::System.Data.DataColumn columndesconto;
            
            private global::System.Data.DataColumn columncódigo;
            
            private global::System.Data.DataColumn columnvalorVenda;
            
            private global::System.Data.DataColumn columnvalorDevolução;
            
            private global::System.Data.DataColumn columnobservações;
            
            private global::System.Data.DataColumn columnmostrarPagamentos;
            
            private global::System.Data.DataColumn columnmostrarModosPagamentos;
            
            private global::System.Data.DataColumn columnvalorPago;
            
            private global::System.Data.DataColumn columndívida;
            
            private global::System.Data.DataColumn columnjuros;
            
            private global::System.Data.DataColumn columnmostrarDívida;
            
            private global::System.Data.DataColumn columntabela;
            
            private global::System.Data.DataColumn columnvalorTotalVendasRelacionadas;
            
            private global::System.Data.DataColumn columnmostrarVendasRelacionadas;
            
            private global::System.Data.DataColumn columncidade;
            
            private global::System.Data.DataColumn columnvalorPagar;
            
            private global::System.Data.DataColumn columnpagoLíquido;
            
            private global::System.Data.DataColumn columndiasSemJuros;
            
            private global::System.Data.DataColumn columntotalDébitos;
            
            private global::System.Data.DataColumn columnmostrarDébitos;
            
            private global::System.Data.DataColumn columnmostrarCréditos;
            
            private global::System.Data.DataColumn columntotalCréditos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesDataTable() {
                this.TableName = "Informações";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InformaçõesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InformaçõesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn funcionárioColumn {
                get {
                    return this.columnfuncionário;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pessoaColumn {
                get {
                    return this.columnpessoa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cotaçãoColumn {
                get {
                    return this.columncotação;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn controleColumn {
                get {
                    return this.columncontrole;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorTotalColumn {
                get {
                    return this.columnvalorTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descontoColumn {
                get {
                    return this.columndesconto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn códigoColumn {
                get {
                    return this.columncódigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorVendaColumn {
                get {
                    return this.columnvalorVenda;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorDevoluçãoColumn {
                get {
                    return this.columnvalorDevolução;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observaçõesColumn {
                get {
                    return this.columnobservações;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarPagamentosColumn {
                get {
                    return this.columnmostrarPagamentos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarModosPagamentosColumn {
                get {
                    return this.columnmostrarModosPagamentos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorPagoColumn {
                get {
                    return this.columnvalorPago;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dívidaColumn {
                get {
                    return this.columndívida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jurosColumn {
                get {
                    return this.columnjuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarDívidaColumn {
                get {
                    return this.columnmostrarDívida;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tabelaColumn {
                get {
                    return this.columntabela;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorTotalVendasRelacionadasColumn {
                get {
                    return this.columnvalorTotalVendasRelacionadas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarVendasRelacionadasColumn {
                get {
                    return this.columnmostrarVendasRelacionadas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cidadeColumn {
                get {
                    return this.columncidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorPagarColumn {
                get {
                    return this.columnvalorPagar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pagoLíquidoColumn {
                get {
                    return this.columnpagoLíquido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diasSemJurosColumn {
                get {
                    return this.columndiasSemJuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalDébitosColumn {
                get {
                    return this.columntotalDébitos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarDébitosColumn {
                get {
                    return this.columnmostrarDébitos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn mostrarCréditosColumn {
                get {
                    return this.columnmostrarCréditos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCréditosColumn {
                get {
                    return this.columntotalCréditos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesRow this[int index] {
                get {
                    return ((InformaçõesRow)(this.Rows[index]));
                }
            }
            
            public event InformaçõesRowChangeEventHandler InformaçõesRowChanging;
            
            public event InformaçõesRowChangeEventHandler InformaçõesRowChanged;
            
            public event InformaçõesRowChangeEventHandler InformaçõesRowDeleting;
            
            public event InformaçõesRowChangeEventHandler InformaçõesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInformaçõesRow(InformaçõesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesRow AddInformaçõesRow(
                        string funcionário, 
                        string pessoa, 
                        string data, 
                        double cotação, 
                        string controle, 
                        double valorTotal, 
                        double desconto, 
                        string código, 
                        double valorVenda, 
                        double valorDevolução, 
                        string observações, 
                        bool mostrarPagamentos, 
                        bool mostrarModosPagamentos, 
                        double valorPago, 
                        double dívida, 
                        double juros, 
                        bool mostrarDívida, 
                        string tabela, 
                        string valorTotalVendasRelacionadas, 
                        string mostrarVendasRelacionadas, 
                        string cidade, 
                        double valorPagar, 
                        double pagoLíquido, 
                        string diasSemJuros, 
                        double totalDébitos, 
                        bool mostrarDébitos, 
                        bool mostrarCréditos, 
                        double totalCréditos) {
                InformaçõesRow rowInformaçõesRow = ((InformaçõesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        funcionário,
                        pessoa,
                        data,
                        cotação,
                        controle,
                        valorTotal,
                        desconto,
                        código,
                        valorVenda,
                        valorDevolução,
                        observações,
                        mostrarPagamentos,
                        mostrarModosPagamentos,
                        valorPago,
                        dívida,
                        juros,
                        mostrarDívida,
                        tabela,
                        valorTotalVendasRelacionadas,
                        mostrarVendasRelacionadas,
                        cidade,
                        valorPagar,
                        pagoLíquido,
                        diasSemJuros,
                        totalDébitos,
                        mostrarDébitos,
                        mostrarCréditos,
                        totalCréditos};
                rowInformaçõesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInformaçõesRow);
                return rowInformaçõesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InformaçõesDataTable cln = ((InformaçõesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InformaçõesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfuncionário = base.Columns["funcionário"];
                this.columnpessoa = base.Columns["pessoa"];
                this.columndata = base.Columns["data"];
                this.columncotação = base.Columns["cotação"];
                this.columncontrole = base.Columns["controle"];
                this.columnvalorTotal = base.Columns["valorTotal"];
                this.columndesconto = base.Columns["desconto"];
                this.columncódigo = base.Columns["código"];
                this.columnvalorVenda = base.Columns["valorVenda"];
                this.columnvalorDevolução = base.Columns["valorDevolução"];
                this.columnobservações = base.Columns["observações"];
                this.columnmostrarPagamentos = base.Columns["mostrarPagamentos"];
                this.columnmostrarModosPagamentos = base.Columns["mostrarModosPagamentos"];
                this.columnvalorPago = base.Columns["valorPago"];
                this.columndívida = base.Columns["dívida"];
                this.columnjuros = base.Columns["juros"];
                this.columnmostrarDívida = base.Columns["mostrarDívida"];
                this.columntabela = base.Columns["tabela"];
                this.columnvalorTotalVendasRelacionadas = base.Columns["valorTotalVendasRelacionadas"];
                this.columnmostrarVendasRelacionadas = base.Columns["mostrarVendasRelacionadas"];
                this.columncidade = base.Columns["cidade"];
                this.columnvalorPagar = base.Columns["valorPagar"];
                this.columnpagoLíquido = base.Columns["pagoLíquido"];
                this.columndiasSemJuros = base.Columns["diasSemJuros"];
                this.columntotalDébitos = base.Columns["totalDébitos"];
                this.columnmostrarDébitos = base.Columns["mostrarDébitos"];
                this.columnmostrarCréditos = base.Columns["mostrarCréditos"];
                this.columntotalCréditos = base.Columns["totalCréditos"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfuncionário = new global::System.Data.DataColumn("funcionário", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfuncionário);
                this.columnpessoa = new global::System.Data.DataColumn("pessoa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpessoa);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columncotação = new global::System.Data.DataColumn("cotação", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncotação);
                this.columncontrole = new global::System.Data.DataColumn("controle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontrole);
                this.columnvalorTotal = new global::System.Data.DataColumn("valorTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorTotal);
                this.columndesconto = new global::System.Data.DataColumn("desconto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesconto);
                this.columncódigo = new global::System.Data.DataColumn("código", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncódigo);
                this.columnvalorVenda = new global::System.Data.DataColumn("valorVenda", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorVenda);
                this.columnvalorDevolução = new global::System.Data.DataColumn("valorDevolução", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorDevolução);
                this.columnobservações = new global::System.Data.DataColumn("observações", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservações);
                this.columnmostrarPagamentos = new global::System.Data.DataColumn("mostrarPagamentos", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarPagamentos);
                this.columnmostrarModosPagamentos = new global::System.Data.DataColumn("mostrarModosPagamentos", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarModosPagamentos);
                this.columnvalorPago = new global::System.Data.DataColumn("valorPago", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorPago);
                this.columndívida = new global::System.Data.DataColumn("dívida", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndívida);
                this.columnjuros = new global::System.Data.DataColumn("juros", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjuros);
                this.columnmostrarDívida = new global::System.Data.DataColumn("mostrarDívida", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarDívida);
                this.columntabela = new global::System.Data.DataColumn("tabela", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntabela);
                this.columnvalorTotalVendasRelacionadas = new global::System.Data.DataColumn("valorTotalVendasRelacionadas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorTotalVendasRelacionadas);
                this.columnmostrarVendasRelacionadas = new global::System.Data.DataColumn("mostrarVendasRelacionadas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarVendasRelacionadas);
                this.columncidade = new global::System.Data.DataColumn("cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncidade);
                this.columnvalorPagar = new global::System.Data.DataColumn("valorPagar", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorPagar);
                this.columnpagoLíquido = new global::System.Data.DataColumn("pagoLíquido", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpagoLíquido);
                this.columndiasSemJuros = new global::System.Data.DataColumn("diasSemJuros", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiasSemJuros);
                this.columntotalDébitos = new global::System.Data.DataColumn("totalDébitos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalDébitos);
                this.columnmostrarDébitos = new global::System.Data.DataColumn("mostrarDébitos", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarDébitos);
                this.columnmostrarCréditos = new global::System.Data.DataColumn("mostrarCréditos", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmostrarCréditos);
                this.columntotalCréditos = new global::System.Data.DataColumn("totalCréditos", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCréditos);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesRow NewInformaçõesRow() {
                return ((InformaçõesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InformaçõesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InformaçõesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InformaçõesRowChanged != null)) {
                    this.InformaçõesRowChanged(this, new InformaçõesRowChangeEvent(((InformaçõesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InformaçõesRowChanging != null)) {
                    this.InformaçõesRowChanging(this, new InformaçõesRowChangeEvent(((InformaçõesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InformaçõesRowDeleted != null)) {
                    this.InformaçõesRowDeleted(this, new InformaçõesRowChangeEvent(((InformaçõesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InformaçõesRowDeleting != null)) {
                    this.InformaçõesRowDeleting(this, new InformaçõesRowChangeEvent(((InformaçõesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInformaçõesRow(InformaçõesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InformaçõesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItensDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnreferência;
            
            private global::System.Data.DataColumn columnpeso;
            
            private global::System.Data.DataColumn columnquantidade;
            
            private global::System.Data.DataColumn columníndice;
            
            private global::System.Data.DataColumn columnfaixaGrupo;
            
            private global::System.Data.DataColumn columndevolvido;
            
            private global::System.Data.DataColumn columndescrição;
            
            private global::System.Data.DataColumn columnvalorUnitário;
            
            private global::System.Data.DataColumn columnvalorTotal;
            
            private global::System.Data.DataColumn columndepeso;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensDataTable() {
                this.TableName = "Itens";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItensDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItensDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn referênciaColumn {
                get {
                    return this.columnreferência;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pesoColumn {
                get {
                    return this.columnpeso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quantidadeColumn {
                get {
                    return this.columnquantidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn índiceColumn {
                get {
                    return this.columníndice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faixaGrupoColumn {
                get {
                    return this.columnfaixaGrupo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn devolvidoColumn {
                get {
                    return this.columndevolvido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriçãoColumn {
                get {
                    return this.columndescrição;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorUnitárioColumn {
                get {
                    return this.columnvalorUnitário;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorTotalColumn {
                get {
                    return this.columnvalorTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn depesoColumn {
                get {
                    return this.columndepeso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensRow this[int index] {
                get {
                    return ((ItensRow)(this.Rows[index]));
                }
            }
            
            public event ItensRowChangeEventHandler ItensRowChanging;
            
            public event ItensRowChangeEventHandler ItensRowChanged;
            
            public event ItensRowChangeEventHandler ItensRowDeleting;
            
            public event ItensRowChangeEventHandler ItensRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItensRow(ItensRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensRow AddItensRow(string referência, double peso, double quantidade, double índice, string faixaGrupo, bool devolvido, string descrição, double valorUnitário, double valorTotal, bool depeso) {
                ItensRow rowItensRow = ((ItensRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        referência,
                        peso,
                        quantidade,
                        índice,
                        faixaGrupo,
                        devolvido,
                        descrição,
                        valorUnitário,
                        valorTotal,
                        depeso};
                rowItensRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItensRow);
                return rowItensRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItensDataTable cln = ((ItensDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItensDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnreferência = base.Columns["referência"];
                this.columnpeso = base.Columns["peso"];
                this.columnquantidade = base.Columns["quantidade"];
                this.columníndice = base.Columns["índice"];
                this.columnfaixaGrupo = base.Columns["faixaGrupo"];
                this.columndevolvido = base.Columns["devolvido"];
                this.columndescrição = base.Columns["descrição"];
                this.columnvalorUnitário = base.Columns["valorUnitário"];
                this.columnvalorTotal = base.Columns["valorTotal"];
                this.columndepeso = base.Columns["depeso"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnreferência = new global::System.Data.DataColumn("referência", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreferência);
                this.columnpeso = new global::System.Data.DataColumn("peso", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeso);
                this.columnquantidade = new global::System.Data.DataColumn("quantidade", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantidade);
                this.columníndice = new global::System.Data.DataColumn("índice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columníndice);
                this.columnfaixaGrupo = new global::System.Data.DataColumn("faixaGrupo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfaixaGrupo);
                this.columndevolvido = new global::System.Data.DataColumn("devolvido", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndevolvido);
                this.columndescrição = new global::System.Data.DataColumn("descrição", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescrição);
                this.columnvalorUnitário = new global::System.Data.DataColumn("valorUnitário", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorUnitário);
                this.columnvalorTotal = new global::System.Data.DataColumn("valorTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorTotal);
                this.columndepeso = new global::System.Data.DataColumn("depeso", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepeso);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensRow NewItensRow() {
                return ((ItensRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItensRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItensRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItensRowChanged != null)) {
                    this.ItensRowChanged(this, new ItensRowChangeEvent(((ItensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItensRowChanging != null)) {
                    this.ItensRowChanging(this, new ItensRowChangeEvent(((ItensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItensRowDeleted != null)) {
                    this.ItensRowDeleted(this, new ItensRowChangeEvent(((ItensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItensRowDeleting != null)) {
                    this.ItensRowDeleting(this, new ItensRowChangeEvent(((ItensRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItensRow(ItensRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItensDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ModoPagamentoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnprestações;
            
            private global::System.Data.DataColumn columnjuros;
            
            private global::System.Data.DataColumn columnvalorTotal;
            
            private global::System.Data.DataColumn columnvalorParcela;
            
            private global::System.Data.DataColumn columndata;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoDataTable() {
                this.TableName = "ModoPagamento";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ModoPagamentoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ModoPagamentoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prestaçõesColumn {
                get {
                    return this.columnprestações;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jurosColumn {
                get {
                    return this.columnjuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorTotalColumn {
                get {
                    return this.columnvalorTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorParcelaColumn {
                get {
                    return this.columnvalorParcela;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoRow this[int index] {
                get {
                    return ((ModoPagamentoRow)(this.Rows[index]));
                }
            }
            
            public event ModoPagamentoRowChangeEventHandler ModoPagamentoRowChanging;
            
            public event ModoPagamentoRowChangeEventHandler ModoPagamentoRowChanged;
            
            public event ModoPagamentoRowChangeEventHandler ModoPagamentoRowDeleting;
            
            public event ModoPagamentoRowChangeEventHandler ModoPagamentoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddModoPagamentoRow(ModoPagamentoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoRow AddModoPagamentoRow(string prestações, double juros, double valorTotal, double valorParcela, string data) {
                ModoPagamentoRow rowModoPagamentoRow = ((ModoPagamentoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        prestações,
                        juros,
                        valorTotal,
                        valorParcela,
                        data};
                rowModoPagamentoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowModoPagamentoRow);
                return rowModoPagamentoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ModoPagamentoDataTable cln = ((ModoPagamentoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ModoPagamentoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnprestações = base.Columns["prestações"];
                this.columnjuros = base.Columns["juros"];
                this.columnvalorTotal = base.Columns["valorTotal"];
                this.columnvalorParcela = base.Columns["valorParcela"];
                this.columndata = base.Columns["data"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnprestações = new global::System.Data.DataColumn("prestações", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprestações);
                this.columnjuros = new global::System.Data.DataColumn("juros", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjuros);
                this.columnvalorTotal = new global::System.Data.DataColumn("valorTotal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorTotal);
                this.columnvalorParcela = new global::System.Data.DataColumn("valorParcela", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorParcela);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoRow NewModoPagamentoRow() {
                return ((ModoPagamentoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ModoPagamentoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ModoPagamentoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ModoPagamentoRowChanged != null)) {
                    this.ModoPagamentoRowChanged(this, new ModoPagamentoRowChangeEvent(((ModoPagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ModoPagamentoRowChanging != null)) {
                    this.ModoPagamentoRowChanging(this, new ModoPagamentoRowChangeEvent(((ModoPagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ModoPagamentoRowDeleted != null)) {
                    this.ModoPagamentoRowDeleted(this, new ModoPagamentoRowChangeEvent(((ModoPagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ModoPagamentoRowDeleting != null)) {
                    this.ModoPagamentoRowDeleting(this, new ModoPagamentoRowChangeEvent(((ModoPagamentoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveModoPagamentoRow(ModoPagamentoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ModoPagamentoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DébitoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndescrição;
            
            private global::System.Data.DataColumn columnvalorLíquido;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columnvalorBruto;
            
            private global::System.Data.DataColumn columndiasDeJuros;
            
            private global::System.Data.DataColumn columncobrarJuros;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoDataTable() {
                this.TableName = "Débito";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DébitoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DébitoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriçãoColumn {
                get {
                    return this.columndescrição;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorLíquidoColumn {
                get {
                    return this.columnvalorLíquido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorBrutoColumn {
                get {
                    return this.columnvalorBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diasDeJurosColumn {
                get {
                    return this.columndiasDeJuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cobrarJurosColumn {
                get {
                    return this.columncobrarJuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoRow this[int index] {
                get {
                    return ((DébitoRow)(this.Rows[index]));
                }
            }
            
            public event DébitoRowChangeEventHandler DébitoRowChanging;
            
            public event DébitoRowChangeEventHandler DébitoRowChanged;
            
            public event DébitoRowChangeEventHandler DébitoRowDeleting;
            
            public event DébitoRowChangeEventHandler DébitoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDébitoRow(DébitoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoRow AddDébitoRow(string descrição, double valorLíquido, string data, double valorBruto, string diasDeJuros, bool cobrarJuros) {
                DébitoRow rowDébitoRow = ((DébitoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        descrição,
                        valorLíquido,
                        data,
                        valorBruto,
                        diasDeJuros,
                        cobrarJuros};
                rowDébitoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDébitoRow);
                return rowDébitoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DébitoDataTable cln = ((DébitoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DébitoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndescrição = base.Columns["descrição"];
                this.columnvalorLíquido = base.Columns["valorLíquido"];
                this.columndata = base.Columns["data"];
                this.columnvalorBruto = base.Columns["valorBruto"];
                this.columndiasDeJuros = base.Columns["diasDeJuros"];
                this.columncobrarJuros = base.Columns["cobrarJuros"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndescrição = new global::System.Data.DataColumn("descrição", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescrição);
                this.columnvalorLíquido = new global::System.Data.DataColumn("valorLíquido", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorLíquido);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columnvalorBruto = new global::System.Data.DataColumn("valorBruto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorBruto);
                this.columndiasDeJuros = new global::System.Data.DataColumn("diasDeJuros", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiasDeJuros);
                this.columncobrarJuros = new global::System.Data.DataColumn("cobrarJuros", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncobrarJuros);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoRow NewDébitoRow() {
                return ((DébitoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DébitoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DébitoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DébitoRowChanged != null)) {
                    this.DébitoRowChanged(this, new DébitoRowChangeEvent(((DébitoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DébitoRowChanging != null)) {
                    this.DébitoRowChanging(this, new DébitoRowChangeEvent(((DébitoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DébitoRowDeleted != null)) {
                    this.DébitoRowDeleted(this, new DébitoRowChangeEvent(((DébitoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DébitoRowDeleting != null)) {
                    this.DébitoRowDeleting(this, new DébitoRowChangeEvent(((DébitoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDébitoRow(DébitoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DébitoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PagamentosDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columntipo;
            
            private global::System.Data.DataColumn columnvalor;
            
            private global::System.Data.DataColumn columnvencimento;
            
            private global::System.Data.DataColumn columncódigo;
            
            private global::System.Data.DataColumn columndias;
            
            private global::System.Data.DataColumn columndeTerceiro;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columnobservações;
            
            private global::System.Data.DataColumn columnvalorLíquido;
            
            private global::System.Data.DataColumn columnpendente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosDataTable() {
                this.TableName = "Pagamentos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PagamentosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PagamentosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoColumn {
                get {
                    return this.columntipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorColumn {
                get {
                    return this.columnvalor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vencimentoColumn {
                get {
                    return this.columnvencimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn códigoColumn {
                get {
                    return this.columncódigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diasColumn {
                get {
                    return this.columndias;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deTerceiroColumn {
                get {
                    return this.columndeTerceiro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observaçõesColumn {
                get {
                    return this.columnobservações;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorLíquidoColumn {
                get {
                    return this.columnvalorLíquido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pendenteColumn {
                get {
                    return this.columnpendente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosRow this[int index] {
                get {
                    return ((PagamentosRow)(this.Rows[index]));
                }
            }
            
            public event PagamentosRowChangeEventHandler PagamentosRowChanging;
            
            public event PagamentosRowChangeEventHandler PagamentosRowChanged;
            
            public event PagamentosRowChangeEventHandler PagamentosRowDeleting;
            
            public event PagamentosRowChangeEventHandler PagamentosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPagamentosRow(PagamentosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosRow AddPagamentosRow(string tipo, double valor, System.DateTime vencimento, string código, int dias, bool deTerceiro, System.DateTime data, string observações, double valorLíquido, bool pendente) {
                PagamentosRow rowPagamentosRow = ((PagamentosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        tipo,
                        valor,
                        vencimento,
                        código,
                        dias,
                        deTerceiro,
                        data,
                        observações,
                        valorLíquido,
                        pendente};
                rowPagamentosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPagamentosRow);
                return rowPagamentosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PagamentosDataTable cln = ((PagamentosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PagamentosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columntipo = base.Columns["tipo"];
                this.columnvalor = base.Columns["valor"];
                this.columnvencimento = base.Columns["vencimento"];
                this.columncódigo = base.Columns["código"];
                this.columndias = base.Columns["dias"];
                this.columndeTerceiro = base.Columns["deTerceiro"];
                this.columndata = base.Columns["data"];
                this.columnobservações = base.Columns["observações"];
                this.columnvalorLíquido = base.Columns["valorLíquido"];
                this.columnpendente = base.Columns["pendente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columntipo = new global::System.Data.DataColumn("tipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipo);
                this.columnvalor = new global::System.Data.DataColumn("valor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalor);
                this.columnvencimento = new global::System.Data.DataColumn("vencimento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvencimento);
                this.columncódigo = new global::System.Data.DataColumn("código", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncódigo);
                this.columndias = new global::System.Data.DataColumn("dias", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndias);
                this.columndeTerceiro = new global::System.Data.DataColumn("deTerceiro", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeTerceiro);
                this.columndata = new global::System.Data.DataColumn("data", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columnobservações = new global::System.Data.DataColumn("observações", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservações);
                this.columnvalorLíquido = new global::System.Data.DataColumn("valorLíquido", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorLíquido);
                this.columnpendente = new global::System.Data.DataColumn("pendente", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpendente);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosRow NewPagamentosRow() {
                return ((PagamentosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PagamentosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PagamentosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PagamentosRowChanged != null)) {
                    this.PagamentosRowChanged(this, new PagamentosRowChangeEvent(((PagamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PagamentosRowChanging != null)) {
                    this.PagamentosRowChanging(this, new PagamentosRowChangeEvent(((PagamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PagamentosRowDeleted != null)) {
                    this.PagamentosRowDeleted(this, new PagamentosRowChangeEvent(((PagamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PagamentosRowDeleting != null)) {
                    this.PagamentosRowDeleting(this, new PagamentosRowChangeEvent(((PagamentosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePagamentosRow(PagamentosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PagamentosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CréditoDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columndescrição;
            
            private global::System.Data.DataColumn columnvalorLíquido;
            
            private global::System.Data.DataColumn columndata;
            
            private global::System.Data.DataColumn columnvalorBruto;
            
            private global::System.Data.DataColumn columndiasDeJuros;
            
            private global::System.Data.DataColumn columncobrarJuros;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoDataTable() {
                this.TableName = "Crédito";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CréditoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CréditoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriçãoColumn {
                get {
                    return this.columndescrição;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorLíquidoColumn {
                get {
                    return this.columnvalorLíquido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataColumn {
                get {
                    return this.columndata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valorBrutoColumn {
                get {
                    return this.columnvalorBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diasDeJurosColumn {
                get {
                    return this.columndiasDeJuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cobrarJurosColumn {
                get {
                    return this.columncobrarJuros;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoRow this[int index] {
                get {
                    return ((CréditoRow)(this.Rows[index]));
                }
            }
            
            public event CréditoRowChangeEventHandler CréditoRowChanging;
            
            public event CréditoRowChangeEventHandler CréditoRowChanged;
            
            public event CréditoRowChangeEventHandler CréditoRowDeleting;
            
            public event CréditoRowChangeEventHandler CréditoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCréditoRow(CréditoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoRow AddCréditoRow(string descrição, double valorLíquido, string data, double valorBruto, string diasDeJuros, bool cobrarJuros) {
                CréditoRow rowCréditoRow = ((CréditoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        descrição,
                        valorLíquido,
                        data,
                        valorBruto,
                        diasDeJuros,
                        cobrarJuros};
                rowCréditoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCréditoRow);
                return rowCréditoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CréditoDataTable cln = ((CréditoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CréditoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndescrição = base.Columns["descrição"];
                this.columnvalorLíquido = base.Columns["valorLíquido"];
                this.columndata = base.Columns["data"];
                this.columnvalorBruto = base.Columns["valorBruto"];
                this.columndiasDeJuros = base.Columns["diasDeJuros"];
                this.columncobrarJuros = base.Columns["cobrarJuros"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndescrição = new global::System.Data.DataColumn("descrição", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescrição);
                this.columnvalorLíquido = new global::System.Data.DataColumn("valorLíquido", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorLíquido);
                this.columndata = new global::System.Data.DataColumn("data", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndata);
                this.columnvalorBruto = new global::System.Data.DataColumn("valorBruto", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalorBruto);
                this.columndiasDeJuros = new global::System.Data.DataColumn("diasDeJuros", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiasDeJuros);
                this.columncobrarJuros = new global::System.Data.DataColumn("cobrarJuros", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncobrarJuros);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoRow NewCréditoRow() {
                return ((CréditoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CréditoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CréditoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CréditoRowChanged != null)) {
                    this.CréditoRowChanged(this, new CréditoRowChangeEvent(((CréditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CréditoRowChanging != null)) {
                    this.CréditoRowChanging(this, new CréditoRowChangeEvent(((CréditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CréditoRowDeleted != null)) {
                    this.CréditoRowDeleted(this, new CréditoRowChangeEvent(((CréditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CréditoRowDeleting != null)) {
                    this.CréditoRowDeleting(this, new CréditoRowChangeEvent(((CréditoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCréditoRow(CréditoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetVenda ds = new DataSetVenda();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CréditoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InformaçõesRow : global::System.Data.DataRow {
            
            private InformaçõesDataTable tableInformações;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InformaçõesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInformações = ((InformaçõesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string funcionário {
                get {
                    try {
                        return ((string)(this[this.tableInformações.funcionárioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'funcionário\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.funcionárioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string pessoa {
                get {
                    try {
                        return ((string)(this[this.tableInformações.pessoaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pessoa\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.pessoaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    try {
                        return ((string)(this[this.tableInformações.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cotação {
                get {
                    try {
                        return ((double)(this[this.tableInformações.cotaçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cotação\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.cotaçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string controle {
                get {
                    try {
                        return ((string)(this[this.tableInformações.controleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'controle\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.controleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorTotal {
                get {
                    try {
                        return ((double)(this[this.tableInformações.valorTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorTotal\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double desconto {
                get {
                    try {
                        return ((double)(this[this.tableInformações.descontoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'desconto\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.descontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string código {
                get {
                    try {
                        return ((string)(this[this.tableInformações.códigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'código\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.códigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorVenda {
                get {
                    try {
                        return ((double)(this[this.tableInformações.valorVendaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorVenda\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorVendaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorDevolução {
                get {
                    try {
                        return ((double)(this[this.tableInformações.valorDevoluçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorDevolução\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorDevoluçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observações {
                get {
                    try {
                        return ((string)(this[this.tableInformações.observaçõesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observações\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.observaçõesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mostrarPagamentos {
                get {
                    try {
                        return ((bool)(this[this.tableInformações.mostrarPagamentosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarPagamentos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarPagamentosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mostrarModosPagamentos {
                get {
                    try {
                        return ((bool)(this[this.tableInformações.mostrarModosPagamentosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarModosPagamentos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarModosPagamentosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorPago {
                get {
                    try {
                        return ((double)(this[this.tableInformações.valorPagoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorPago\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorPagoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double dívida {
                get {
                    try {
                        return ((double)(this[this.tableInformações.dívidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dívida\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.dívidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double juros {
                get {
                    try {
                        return ((double)(this[this.tableInformações.jurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'juros\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.jurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mostrarDívida {
                get {
                    try {
                        return ((bool)(this[this.tableInformações.mostrarDívidaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarDívida\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarDívidaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tabela {
                get {
                    try {
                        return ((string)(this[this.tableInformações.tabelaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tabela\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.tabelaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string valorTotalVendasRelacionadas {
                get {
                    try {
                        return ((string)(this[this.tableInformações.valorTotalVendasRelacionadasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorTotalVendasRelacionadas\' in table \'Informações\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorTotalVendasRelacionadasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string mostrarVendasRelacionadas {
                get {
                    try {
                        return ((string)(this[this.tableInformações.mostrarVendasRelacionadasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarVendasRelacionadas\' in table \'Informações\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarVendasRelacionadasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cidade {
                get {
                    try {
                        return ((string)(this[this.tableInformações.cidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cidade\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.cidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorPagar {
                get {
                    try {
                        return ((double)(this[this.tableInformações.valorPagarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorPagar\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.valorPagarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pagoLíquido {
                get {
                    try {
                        return ((double)(this[this.tableInformações.pagoLíquidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pagoLíquido\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.pagoLíquidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string diasSemJuros {
                get {
                    try {
                        return ((string)(this[this.tableInformações.diasSemJurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diasSemJuros\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.diasSemJurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalDébitos {
                get {
                    try {
                        return ((double)(this[this.tableInformações.totalDébitosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalDébitos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.totalDébitosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mostrarDébitos {
                get {
                    try {
                        return ((bool)(this[this.tableInformações.mostrarDébitosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarDébitos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarDébitosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool mostrarCréditos {
                get {
                    try {
                        return ((bool)(this[this.tableInformações.mostrarCréditosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'mostrarCréditos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.mostrarCréditosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalCréditos {
                get {
                    try {
                        return ((double)(this[this.tableInformações.totalCréditosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCréditos\' in table \'Informações\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInformações.totalCréditosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfuncionárioNull() {
                return this.IsNull(this.tableInformações.funcionárioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfuncionárioNull() {
                this[this.tableInformações.funcionárioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspessoaNull() {
                return this.IsNull(this.tableInformações.pessoaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpessoaNull() {
                this[this.tableInformações.pessoaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tableInformações.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tableInformações.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscotaçãoNull() {
                return this.IsNull(this.tableInformações.cotaçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcotaçãoNull() {
                this[this.tableInformações.cotaçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontroleNull() {
                return this.IsNull(this.tableInformações.controleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontroleNull() {
                this[this.tableInformações.controleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorTotalNull() {
                return this.IsNull(this.tableInformações.valorTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorTotalNull() {
                this[this.tableInformações.valorTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescontoNull() {
                return this.IsNull(this.tableInformações.descontoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescontoNull() {
                this[this.tableInformações.descontoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscódigoNull() {
                return this.IsNull(this.tableInformações.códigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcódigoNull() {
                this[this.tableInformações.códigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorVendaNull() {
                return this.IsNull(this.tableInformações.valorVendaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorVendaNull() {
                this[this.tableInformações.valorVendaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorDevoluçãoNull() {
                return this.IsNull(this.tableInformações.valorDevoluçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorDevoluçãoNull() {
                this[this.tableInformações.valorDevoluçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservaçõesNull() {
                return this.IsNull(this.tableInformações.observaçõesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservaçõesNull() {
                this[this.tableInformações.observaçõesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarPagamentosNull() {
                return this.IsNull(this.tableInformações.mostrarPagamentosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarPagamentosNull() {
                this[this.tableInformações.mostrarPagamentosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarModosPagamentosNull() {
                return this.IsNull(this.tableInformações.mostrarModosPagamentosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarModosPagamentosNull() {
                this[this.tableInformações.mostrarModosPagamentosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorPagoNull() {
                return this.IsNull(this.tableInformações.valorPagoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorPagoNull() {
                this[this.tableInformações.valorPagoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdívidaNull() {
                return this.IsNull(this.tableInformações.dívidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdívidaNull() {
                this[this.tableInformações.dívidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjurosNull() {
                return this.IsNull(this.tableInformações.jurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjurosNull() {
                this[this.tableInformações.jurosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarDívidaNull() {
                return this.IsNull(this.tableInformações.mostrarDívidaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarDívidaNull() {
                this[this.tableInformações.mostrarDívidaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstabelaNull() {
                return this.IsNull(this.tableInformações.tabelaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettabelaNull() {
                this[this.tableInformações.tabelaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorTotalVendasRelacionadasNull() {
                return this.IsNull(this.tableInformações.valorTotalVendasRelacionadasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorTotalVendasRelacionadasNull() {
                this[this.tableInformações.valorTotalVendasRelacionadasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarVendasRelacionadasNull() {
                return this.IsNull(this.tableInformações.mostrarVendasRelacionadasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarVendasRelacionadasNull() {
                this[this.tableInformações.mostrarVendasRelacionadasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscidadeNull() {
                return this.IsNull(this.tableInformações.cidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcidadeNull() {
                this[this.tableInformações.cidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorPagarNull() {
                return this.IsNull(this.tableInformações.valorPagarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorPagarNull() {
                this[this.tableInformações.valorPagarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspagoLíquidoNull() {
                return this.IsNull(this.tableInformações.pagoLíquidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpagoLíquidoNull() {
                this[this.tableInformações.pagoLíquidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiasSemJurosNull() {
                return this.IsNull(this.tableInformações.diasSemJurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiasSemJurosNull() {
                this[this.tableInformações.diasSemJurosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalDébitosNull() {
                return this.IsNull(this.tableInformações.totalDébitosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalDébitosNull() {
                this[this.tableInformações.totalDébitosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarDébitosNull() {
                return this.IsNull(this.tableInformações.mostrarDébitosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarDébitosNull() {
                this[this.tableInformações.mostrarDébitosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmostrarCréditosNull() {
                return this.IsNull(this.tableInformações.mostrarCréditosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmostrarCréditosNull() {
                this[this.tableInformações.mostrarCréditosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCréditosNull() {
                return this.IsNull(this.tableInformações.totalCréditosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCréditosNull() {
                this[this.tableInformações.totalCréditosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItensRow : global::System.Data.DataRow {
            
            private ItensDataTable tableItens;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItensRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItens = ((ItensDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string referência {
                get {
                    try {
                        return ((string)(this[this.tableItens.referênciaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'referência\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.referênciaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double peso {
                get {
                    try {
                        return ((double)(this[this.tableItens.pesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'peso\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.pesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double quantidade {
                get {
                    try {
                        return ((double)(this[this.tableItens.quantidadeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'quantidade\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.quantidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double índice {
                get {
                    try {
                        return ((double)(this[this.tableItens.índiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'índice\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.índiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string faixaGrupo {
                get {
                    try {
                        return ((string)(this[this.tableItens.faixaGrupoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'faixaGrupo\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.faixaGrupoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool devolvido {
                get {
                    try {
                        return ((bool)(this[this.tableItens.devolvidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'devolvido\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.devolvidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descrição {
                get {
                    try {
                        return ((string)(this[this.tableItens.descriçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descrição\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.descriçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorUnitário {
                get {
                    try {
                        return ((double)(this[this.tableItens.valorUnitárioColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorUnitário\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.valorUnitárioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorTotal {
                get {
                    try {
                        return ((double)(this[this.tableItens.valorTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorTotal\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.valorTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool depeso {
                get {
                    try {
                        return ((bool)(this[this.tableItens.depesoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'depeso\' in table \'Itens\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItens.depesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreferênciaNull() {
                return this.IsNull(this.tableItens.referênciaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreferênciaNull() {
                this[this.tableItens.referênciaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspesoNull() {
                return this.IsNull(this.tableItens.pesoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpesoNull() {
                this[this.tableItens.pesoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsquantidadeNull() {
                return this.IsNull(this.tableItens.quantidadeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetquantidadeNull() {
                this[this.tableItens.quantidadeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsíndiceNull() {
                return this.IsNull(this.tableItens.índiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetíndiceNull() {
                this[this.tableItens.índiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaixaGrupoNull() {
                return this.IsNull(this.tableItens.faixaGrupoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaixaGrupoNull() {
                this[this.tableItens.faixaGrupoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdevolvidoNull() {
                return this.IsNull(this.tableItens.devolvidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdevolvidoNull() {
                this[this.tableItens.devolvidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriçãoNull() {
                return this.IsNull(this.tableItens.descriçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriçãoNull() {
                this[this.tableItens.descriçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorUnitárioNull() {
                return this.IsNull(this.tableItens.valorUnitárioColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorUnitárioNull() {
                this[this.tableItens.valorUnitárioColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorTotalNull() {
                return this.IsNull(this.tableItens.valorTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorTotalNull() {
                this[this.tableItens.valorTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdepesoNull() {
                return this.IsNull(this.tableItens.depesoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdepesoNull() {
                this[this.tableItens.depesoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ModoPagamentoRow : global::System.Data.DataRow {
            
            private ModoPagamentoDataTable tableModoPagamento;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ModoPagamentoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableModoPagamento = ((ModoPagamentoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prestações {
                get {
                    try {
                        return ((string)(this[this.tableModoPagamento.prestaçõesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prestações\' in table \'ModoPagamento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModoPagamento.prestaçõesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double juros {
                get {
                    try {
                        return ((double)(this[this.tableModoPagamento.jurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'juros\' in table \'ModoPagamento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModoPagamento.jurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorTotal {
                get {
                    try {
                        return ((double)(this[this.tableModoPagamento.valorTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorTotal\' in table \'ModoPagamento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModoPagamento.valorTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorParcela {
                get {
                    try {
                        return ((double)(this[this.tableModoPagamento.valorParcelaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorParcela\' in table \'ModoPagamento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModoPagamento.valorParcelaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    try {
                        return ((string)(this[this.tableModoPagamento.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'ModoPagamento\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableModoPagamento.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprestaçõesNull() {
                return this.IsNull(this.tableModoPagamento.prestaçõesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprestaçõesNull() {
                this[this.tableModoPagamento.prestaçõesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjurosNull() {
                return this.IsNull(this.tableModoPagamento.jurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjurosNull() {
                this[this.tableModoPagamento.jurosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorTotalNull() {
                return this.IsNull(this.tableModoPagamento.valorTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorTotalNull() {
                this[this.tableModoPagamento.valorTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorParcelaNull() {
                return this.IsNull(this.tableModoPagamento.valorParcelaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorParcelaNull() {
                this[this.tableModoPagamento.valorParcelaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tableModoPagamento.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tableModoPagamento.dataColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DébitoRow : global::System.Data.DataRow {
            
            private DébitoDataTable tableDébito;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DébitoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDébito = ((DébitoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descrição {
                get {
                    try {
                        return ((string)(this[this.tableDébito.descriçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descrição\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.descriçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorLíquido {
                get {
                    try {
                        return ((double)(this[this.tableDébito.valorLíquidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorLíquido\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.valorLíquidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    try {
                        return ((string)(this[this.tableDébito.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorBruto {
                get {
                    try {
                        return ((double)(this[this.tableDébito.valorBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorBruto\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.valorBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string diasDeJuros {
                get {
                    try {
                        return ((string)(this[this.tableDébito.diasDeJurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diasDeJuros\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.diasDeJurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool cobrarJuros {
                get {
                    try {
                        return ((bool)(this[this.tableDébito.cobrarJurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cobrarJuros\' in table \'Débito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDébito.cobrarJurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriçãoNull() {
                return this.IsNull(this.tableDébito.descriçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriçãoNull() {
                this[this.tableDébito.descriçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorLíquidoNull() {
                return this.IsNull(this.tableDébito.valorLíquidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorLíquidoNull() {
                this[this.tableDébito.valorLíquidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tableDébito.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tableDébito.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorBrutoNull() {
                return this.IsNull(this.tableDébito.valorBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorBrutoNull() {
                this[this.tableDébito.valorBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiasDeJurosNull() {
                return this.IsNull(this.tableDébito.diasDeJurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiasDeJurosNull() {
                this[this.tableDébito.diasDeJurosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscobrarJurosNull() {
                return this.IsNull(this.tableDébito.cobrarJurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcobrarJurosNull() {
                this[this.tableDébito.cobrarJurosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PagamentosRow : global::System.Data.DataRow {
            
            private PagamentosDataTable tablePagamentos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PagamentosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePagamentos = ((PagamentosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tipo {
                get {
                    try {
                        return ((string)(this[this.tablePagamentos.tipoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipo\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.tipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valor {
                get {
                    try {
                        return ((double)(this[this.tablePagamentos.valorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valor\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.valorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime vencimento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePagamentos.vencimentoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vencimento\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.vencimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string código {
                get {
                    try {
                        return ((string)(this[this.tablePagamentos.códigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'código\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.códigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int dias {
                get {
                    try {
                        return ((int)(this[this.tablePagamentos.diasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dias\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.diasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool deTerceiro {
                get {
                    try {
                        return ((bool)(this[this.tablePagamentos.deTerceiroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deTerceiro\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.deTerceiroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime data {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePagamentos.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observações {
                get {
                    try {
                        return ((string)(this[this.tablePagamentos.observaçõesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observações\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.observaçõesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorLíquido {
                get {
                    try {
                        return ((double)(this[this.tablePagamentos.valorLíquidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorLíquido\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.valorLíquidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool pendente {
                get {
                    try {
                        return ((bool)(this[this.tablePagamentos.pendenteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pendente\' in table \'Pagamentos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePagamentos.pendenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoNull() {
                return this.IsNull(this.tablePagamentos.tipoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoNull() {
                this[this.tablePagamentos.tipoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorNull() {
                return this.IsNull(this.tablePagamentos.valorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorNull() {
                this[this.tablePagamentos.valorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvencimentoNull() {
                return this.IsNull(this.tablePagamentos.vencimentoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvencimentoNull() {
                this[this.tablePagamentos.vencimentoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscódigoNull() {
                return this.IsNull(this.tablePagamentos.códigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcódigoNull() {
                this[this.tablePagamentos.códigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiasNull() {
                return this.IsNull(this.tablePagamentos.diasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiasNull() {
                this[this.tablePagamentos.diasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeTerceiroNull() {
                return this.IsNull(this.tablePagamentos.deTerceiroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeTerceiroNull() {
                this[this.tablePagamentos.deTerceiroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tablePagamentos.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tablePagamentos.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservaçõesNull() {
                return this.IsNull(this.tablePagamentos.observaçõesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservaçõesNull() {
                this[this.tablePagamentos.observaçõesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorLíquidoNull() {
                return this.IsNull(this.tablePagamentos.valorLíquidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorLíquidoNull() {
                this[this.tablePagamentos.valorLíquidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspendenteNull() {
                return this.IsNull(this.tablePagamentos.pendenteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpendenteNull() {
                this[this.tablePagamentos.pendenteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CréditoRow : global::System.Data.DataRow {
            
            private CréditoDataTable tableCrédito;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CréditoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCrédito = ((CréditoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string descrição {
                get {
                    try {
                        return ((string)(this[this.tableCrédito.descriçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'descrição\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.descriçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorLíquido {
                get {
                    try {
                        return ((double)(this[this.tableCrédito.valorLíquidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorLíquido\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.valorLíquidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string data {
                get {
                    try {
                        return ((string)(this[this.tableCrédito.dataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'data\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.dataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double valorBruto {
                get {
                    try {
                        return ((double)(this[this.tableCrédito.valorBrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'valorBruto\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.valorBrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string diasDeJuros {
                get {
                    try {
                        return ((string)(this[this.tableCrédito.diasDeJurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diasDeJuros\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.diasDeJurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool cobrarJuros {
                get {
                    try {
                        return ((bool)(this[this.tableCrédito.cobrarJurosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cobrarJuros\' in table \'Crédito\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCrédito.cobrarJurosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriçãoNull() {
                return this.IsNull(this.tableCrédito.descriçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriçãoNull() {
                this[this.tableCrédito.descriçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorLíquidoNull() {
                return this.IsNull(this.tableCrédito.valorLíquidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorLíquidoNull() {
                this[this.tableCrédito.valorLíquidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataNull() {
                return this.IsNull(this.tableCrédito.dataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataNull() {
                this[this.tableCrédito.dataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvalorBrutoNull() {
                return this.IsNull(this.tableCrédito.valorBrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvalorBrutoNull() {
                this[this.tableCrédito.valorBrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiasDeJurosNull() {
                return this.IsNull(this.tableCrédito.diasDeJurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiasDeJurosNull() {
                this[this.tableCrédito.diasDeJurosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscobrarJurosNull() {
                return this.IsNull(this.tableCrédito.cobrarJurosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcobrarJurosNull() {
                this[this.tableCrédito.cobrarJurosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InformaçõesRowChangeEvent : global::System.EventArgs {
            
            private InformaçõesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesRowChangeEvent(InformaçõesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InformaçõesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItensRowChangeEvent : global::System.EventArgs {
            
            private ItensRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensRowChangeEvent(ItensRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItensRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ModoPagamentoRowChangeEvent : global::System.EventArgs {
            
            private ModoPagamentoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoRowChangeEvent(ModoPagamentoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ModoPagamentoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DébitoRowChangeEvent : global::System.EventArgs {
            
            private DébitoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoRowChangeEvent(DébitoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DébitoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PagamentosRowChangeEvent : global::System.EventArgs {
            
            private PagamentosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosRowChangeEvent(PagamentosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PagamentosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CréditoRowChangeEvent : global::System.EventArgs {
            
            private CréditoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoRowChangeEvent(CréditoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CréditoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591