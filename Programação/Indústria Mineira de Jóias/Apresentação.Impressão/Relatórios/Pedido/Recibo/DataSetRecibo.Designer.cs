//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4016
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Apresentação.Impressão.Relatórios.Pedido.Recibo {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetRecibo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetRecibo : global::System.Data.DataSet {
        
        private ReciboDataTable tableRecibo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetRecibo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetRecibo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Recibo"] != null)) {
                    base.Tables.Add(new ReciboDataTable(ds.Tables["Recibo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReciboDataTable Recibo {
            get {
                return this.tableRecibo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetRecibo cln = ((DataSetRecibo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Recibo"] != null)) {
                    base.Tables.Add(new ReciboDataTable(ds.Tables["Recibo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRecibo = ((ReciboDataTable)(base.Tables["Recibo"]));
            if ((initTable == true)) {
                if ((this.tableRecibo != null)) {
                    this.tableRecibo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetRecibo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetRecibo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRecibo = new ReciboDataTable();
            base.Tables.Add(this.tableRecibo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRecibo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetRecibo ds = new DataSetRecibo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ReciboRowChangeEventHandler(object sender, ReciboRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReciboDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncódigo;
            
            private global::System.Data.DataColumn columnclienteNome;
            
            private global::System.Data.DataColumn columndataPrevisão;
            
            private global::System.Data.DataColumn columnobservações;
            
            private global::System.Data.DataColumn columnrecepçãoFuncionárioNome;
            
            private global::System.Data.DataColumn columndataRecepção;
            
            private global::System.Data.DataColumn columntipoPedido;
            
            private global::System.Data.DataColumn columnclienteCódigo;
            
            private global::System.Data.DataColumn columnpertenceAoCliente;
            
            private global::System.Data.DataColumn columndespachar;
            
            private global::System.Data.DataColumn columnrepresentanteNome;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboDataTable() {
                this.TableName = "Recibo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReciboDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReciboDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn códigoColumn {
                get {
                    return this.columncódigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clienteNomeColumn {
                get {
                    return this.columnclienteNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataPrevisãoColumn {
                get {
                    return this.columndataPrevisão;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn observaçõesColumn {
                get {
                    return this.columnobservações;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn recepçãoFuncionárioNomeColumn {
                get {
                    return this.columnrecepçãoFuncionárioNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dataRecepçãoColumn {
                get {
                    return this.columndataRecepção;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tipoPedidoColumn {
                get {
                    return this.columntipoPedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn clienteCódigoColumn {
                get {
                    return this.columnclienteCódigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pertenceAoClienteColumn {
                get {
                    return this.columnpertenceAoCliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn despacharColumn {
                get {
                    return this.columndespachar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn representanteNomeColumn {
                get {
                    return this.columnrepresentanteNome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboRow this[int index] {
                get {
                    return ((ReciboRow)(this.Rows[index]));
                }
            }
            
            public event ReciboRowChangeEventHandler ReciboRowChanging;
            
            public event ReciboRowChangeEventHandler ReciboRowChanged;
            
            public event ReciboRowChangeEventHandler ReciboRowDeleting;
            
            public event ReciboRowChangeEventHandler ReciboRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReciboRow(ReciboRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboRow AddReciboRow(string código, string clienteNome, string dataPrevisão, string observações, string recepçãoFuncionárioNome, string dataRecepção, bool tipoPedido, string clienteCódigo, bool pertenceAoCliente, bool despachar, string representanteNome) {
                ReciboRow rowReciboRow = ((ReciboRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        código,
                        clienteNome,
                        dataPrevisão,
                        observações,
                        recepçãoFuncionárioNome,
                        dataRecepção,
                        tipoPedido,
                        clienteCódigo,
                        pertenceAoCliente,
                        despachar,
                        representanteNome};
                rowReciboRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReciboRow);
                return rowReciboRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReciboDataTable cln = ((ReciboDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReciboDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncódigo = base.Columns["código"];
                this.columnclienteNome = base.Columns["clienteNome"];
                this.columndataPrevisão = base.Columns["dataPrevisão"];
                this.columnobservações = base.Columns["observações"];
                this.columnrecepçãoFuncionárioNome = base.Columns["recepçãoFuncionárioNome"];
                this.columndataRecepção = base.Columns["dataRecepção"];
                this.columntipoPedido = base.Columns["tipoPedido"];
                this.columnclienteCódigo = base.Columns["clienteCódigo"];
                this.columnpertenceAoCliente = base.Columns["pertenceAoCliente"];
                this.columndespachar = base.Columns["despachar"];
                this.columnrepresentanteNome = base.Columns["representanteNome"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncódigo = new global::System.Data.DataColumn("código", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncódigo);
                this.columnclienteNome = new global::System.Data.DataColumn("clienteNome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclienteNome);
                this.columndataPrevisão = new global::System.Data.DataColumn("dataPrevisão", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataPrevisão);
                this.columnobservações = new global::System.Data.DataColumn("observações", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservações);
                this.columnrecepçãoFuncionárioNome = new global::System.Data.DataColumn("recepçãoFuncionárioNome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrecepçãoFuncionárioNome);
                this.columndataRecepção = new global::System.Data.DataColumn("dataRecepção", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndataRecepção);
                this.columntipoPedido = new global::System.Data.DataColumn("tipoPedido", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntipoPedido);
                this.columnclienteCódigo = new global::System.Data.DataColumn("clienteCódigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclienteCódigo);
                this.columnpertenceAoCliente = new global::System.Data.DataColumn("pertenceAoCliente", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpertenceAoCliente);
                this.columndespachar = new global::System.Data.DataColumn("despachar", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndespachar);
                this.columnrepresentanteNome = new global::System.Data.DataColumn("representanteNome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepresentanteNome);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboRow NewReciboRow() {
                return ((ReciboRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReciboRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReciboRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReciboRowChanged != null)) {
                    this.ReciboRowChanged(this, new ReciboRowChangeEvent(((ReciboRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReciboRowChanging != null)) {
                    this.ReciboRowChanging(this, new ReciboRowChangeEvent(((ReciboRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReciboRowDeleted != null)) {
                    this.ReciboRowDeleted(this, new ReciboRowChangeEvent(((ReciboRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReciboRowDeleting != null)) {
                    this.ReciboRowDeleting(this, new ReciboRowChangeEvent(((ReciboRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReciboRow(ReciboRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetRecibo ds = new DataSetRecibo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReciboDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReciboRow : global::System.Data.DataRow {
            
            private ReciboDataTable tableRecibo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReciboRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecibo = ((ReciboDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string código {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.códigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'código\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.códigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clienteNome {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.clienteNomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clienteNome\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.clienteNomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dataPrevisão {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.dataPrevisãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dataPrevisão\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.dataPrevisãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string observações {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.observaçõesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observações\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.observaçõesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string recepçãoFuncionárioNome {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.recepçãoFuncionárioNomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'recepçãoFuncionárioNome\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.recepçãoFuncionárioNomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string dataRecepção {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.dataRecepçãoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dataRecepção\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.dataRecepçãoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool tipoPedido {
                get {
                    try {
                        return ((bool)(this[this.tableRecibo.tipoPedidoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tipoPedido\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.tipoPedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string clienteCódigo {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.clienteCódigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'clienteCódigo\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.clienteCódigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool pertenceAoCliente {
                get {
                    try {
                        return ((bool)(this[this.tableRecibo.pertenceAoClienteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pertenceAoCliente\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.pertenceAoClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool despachar {
                get {
                    try {
                        return ((bool)(this[this.tableRecibo.despacharColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'despachar\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.despacharColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string representanteNome {
                get {
                    try {
                        return ((string)(this[this.tableRecibo.representanteNomeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'representanteNome\' in table \'Recibo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecibo.representanteNomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscódigoNull() {
                return this.IsNull(this.tableRecibo.códigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcódigoNull() {
                this[this.tableRecibo.códigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclienteNomeNull() {
                return this.IsNull(this.tableRecibo.clienteNomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclienteNomeNull() {
                this[this.tableRecibo.clienteNomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataPrevisãoNull() {
                return this.IsNull(this.tableRecibo.dataPrevisãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataPrevisãoNull() {
                this[this.tableRecibo.dataPrevisãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobservaçõesNull() {
                return this.IsNull(this.tableRecibo.observaçõesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobservaçõesNull() {
                this[this.tableRecibo.observaçõesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrecepçãoFuncionárioNomeNull() {
                return this.IsNull(this.tableRecibo.recepçãoFuncionárioNomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrecepçãoFuncionárioNomeNull() {
                this[this.tableRecibo.recepçãoFuncionárioNomeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdataRecepçãoNull() {
                return this.IsNull(this.tableRecibo.dataRecepçãoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdataRecepçãoNull() {
                this[this.tableRecibo.dataRecepçãoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstipoPedidoNull() {
                return this.IsNull(this.tableRecibo.tipoPedidoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettipoPedidoNull() {
                this[this.tableRecibo.tipoPedidoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclienteCódigoNull() {
                return this.IsNull(this.tableRecibo.clienteCódigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclienteCódigoNull() {
                this[this.tableRecibo.clienteCódigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspertenceAoClienteNull() {
                return this.IsNull(this.tableRecibo.pertenceAoClienteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpertenceAoClienteNull() {
                this[this.tableRecibo.pertenceAoClienteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdespacharNull() {
                return this.IsNull(this.tableRecibo.despacharColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdespacharNull() {
                this[this.tableRecibo.despacharColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsrepresentanteNomeNull() {
                return this.IsNull(this.tableRecibo.representanteNomeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetrepresentanteNomeNull() {
                this[this.tableRecibo.representanteNomeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReciboRowChangeEvent : global::System.EventArgs {
            
            private ReciboRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboRowChangeEvent(ReciboRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReciboRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591