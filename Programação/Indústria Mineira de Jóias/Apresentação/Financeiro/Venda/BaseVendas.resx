<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="opçãoComprasDesteFuncionário.Imagem" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACw8AAAsPAZL5A6UAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQffBRMUKCWohgIa
        AAAAgmlUWHRDb21tZW50AAAAAABERU1PIFZFUlNJT04gOiBCdWlsdCB3aXRoIGFuIFVOUkVHSVNURVJF
        RCBjb3B5IG9mIEdJRiBNb3ZpZSBHZWFyIDIuNg0KZnJvbSBnYW1hbmkgcHJvZHVjdGlvbnMgKGh0dHA6
        Ly93d3cuZ2FtYW5pLmNvbSkuCHEizwAAF+1JREFUeF7lW/dXVFm6fX/E+/nNvPfmh7fWzJs10z3TPT2d
        o91tBkwoCgKiCAiKCKKCCVQUECRIlCA5iAqiEpQgQXLOORWhCEWooqrYb59bMt12l4q2TM9a76zeza17
        zz33fPt+5/v2d+/135aWlvD/Gf8kAvAM+o79ulh1ArRaNTSqbixpxyCavj46SIelpv/46mCVCRDmjGBa
        dheDXY8wNTnO34vSfn391MpGKOeGoFar9fRZHawiAcIoYFbRj56OQvR21mB6cgwa9bx07Md9RZOPVeNW
        ohMeZoViYnxU2vfjPquFt0yAbtK6psb01DiGBnowMtwPxawC6sVFErD47LiuLfefnBjAeff9CAn0wKhs
        SNr3/Nirg7dIALjedX81ag1mZ+UYHemjYTIaPkdztJJRWo0GKuU83VwjYfl80e7evo2ga96or62Ufj8/
        /urglxMgTVVMVkHjekiCCuOjw+jr7YaGxi430Ve0RdUC3X0A42Mjz8gRMUEcW8LM9CSuB1xGRIg/vWdS
        6v/ctVYBv4gA0YSRSuUMDatitI/iXR1Hd3stBgf6JONEe64/l8CUXIaezkbIBlswx6UhjqmUwkuAxvoa
        BFz1wJ2MeOm3aMvnrwbemACtVufS8okxdLeVQD6UAuVULDRapbR/fm5OIkffuctNbIrfYqxliJZ5OwHR
        4e7c6tYtE2lprQ7egADdJOfnZjBBV56cGMf87CgW56tpQCuPr+yOabUaZoVRyCenOMYwpiaGMMalU1Za
        gLSEK6gp88C8IgENVXm8lsgc+sf5pXgtAkTrqIvF3IwuSi/fNd0xQYzo9yoCxLJRY4bGywbb8bS8GG1N
        FWhtrkbhoyykJd9AbGQwSgqToJq9jcGeAAz3t+gZ5+3gNT0AUM5X0IAZiQBdW8Iio/zI8ACG+mv5e/of
        fXX46RjMAqppjA73YaC/B23NNejuaEDZkzwUFWQj90EakhKicTclAH1NQXT/YsYSIYx+Os7bwWsvAVJA
        DGBOMUhlJ0dXZysnnYK4KB8kx4djYb7zWd9p9mOEl7xiGSINKtlnGLP0Ivk4s0V3Kw3Pw4N7t/EoNwvF
        BQ8RHRmIxNiTmBlP5RivktC/DG8QA8R05jA7PYLOtgY8vHcTAd6OOHPqEEKDfJjDS3R9tAMY6cnCwtzz
        qk6sfaEGBREiJTbWFCLvXgSKHmejpCgfYSFhuOrlivLCyzyrXBrr+eu/XbyBB+ja2FADWhqKUFmWhajr
        jjh5bDeiIwIREuDBo1qmwRZUlSbzTusI0N+WIOuPRVfLdZQ+eYj4mzGwt3NA6DV7KMZSeHyC1/wXIkA0
        lVKJiqdPEOjrhLhIN5QWpiM57iqcD2+F+/EDsDZfgycFccjOCMCtlFD0dLVielqOSfk4JicnMTMzwzEW
        uK6VUNMDtKpsLCpSkJYUCduD9nB3NkNNiRetrgOzn955vE2snAAaL3J7edEtHDtkiB2b3sERq0/g62kJ
        L09nOFgbwmL7+9i/51Mct1uDSJ8t8Dprjoy0aK7tTORzfRc8yuF6z0dZSSGqnxaituIB5qeK0F0XijMn
        D8LUxBi5t12ZJh7xagu87r8QAWpG7s6WEkQF7EGgpyFiAy0Q7m0OT9eNcHP8CqcdN8DzmAF8T2+Dt9sW
        pIQdgOvhDSxw7KnsPBEW7IPIUH9cv3YFvl7nue8cQgNcMTsagih/M+wzXY8gHzt0t4ZQHdaylnimIqX/
        6xqn8Qz65/gmWAEBIt+rGJGL0dVwAwOtNzDaHQdZVww6GsLRUOqLpznueJDqjFuxh5EWeRB34xxRnHmC
        RGzEMftt8Pf1QGJcBOJjQqQ4EXsjCHHRwUhPvY2pwSicdd0OuwMmeJp3GSW5njx2GdWVFZLRQjqrCSWX
        3tISvUIraged9ngbWAEBauZ9OUlo4HYj0cRJ8C+BJQqUxVIszmZiQZGFubF0GpQMxUQ5ooIdcN51K047
        bYDvJUfERAYhKS5cQsLNCMRGXUfO3QAU3jkOl8NcLh42qHvii6seO+B6dC/qap5yfC1kQ10Y7G1GVUUp
        Y0cJlHOiyFJxHm/HE15CgLiAYJ15Xct0pG1/JbDUwTvWjYqSRFy/YIxzvLPuTpsQfNUViTfDGCxDEBvh
        Ce+LjvD28kJrZQh8PHbD5eg+pMcehRvJOnXcCtVVZdLdn2Sd0d5Sy5hRgPLSQumvTDYK9bMqU/+8Xw8v
        IEAMLoJQBw0rIp5iSZ1Jf8yBRhnLu57OdZFP3CeyuP8hweNLT3jOBNKi7XH14j4kh9sgxs8MEd7bkBjp
        gpTEWBIRgYjg8wi/dhC1JX445bSVhhvA7wy9xeELZKf7UyjpSmHRREUpHqp0tNZyWZRhZFAUSCrpmP65
        vx5eTIB2EEuaezT8AUVLAkXdTUwOBjFiX0Z98XmU5Z5Dcc55lPJv1SM31FW5oL/9LLQLj+F3yQzVpUGY
        GEhBd60v7t60IAG2yLzlR8UYgLiYcGTfjUV2ihMund6JyKt7ccrRAEf3f4J7aYEMgDqpvTwfEQPE8wHZ
        UA/6+7oppXUV5/NzfjPoJ4CDaxd7oJmL4wblqCYSzVU+yEqwR6S/JfwumNJ1TeHushUeJ3cg985FFjJx
        eJIXjKHORARd3IbGqggsKhk3NBUY6o5Fec4ZPGaKy8nwQETQSQT7HEHiDXvcirFjNtmDk45GcLL+DHeT
        /aUHI88byCnQ7Wdn51h3KKRjoj035zfEiz1A3QetMh6quQgWJVeQmeiImwEW8D2/C55uu+i622Fj+R3O
        nbJEXfUTyOUTGJMNQDHVjuaah+jvrmQ6G+BYLJEZMGcnSzDYFo2qvNNMoVaIDbBEdcFlZCc7krBdOHPU
        ACdsv0QSl4psqPmZiT80MSfR+vtapaJrUTUr/dY//5XjJTGAk19MwNQQI3XmSSRFWCP8qiW8z+2mWtsK
        ZwcjWFuswWmX3WiuL5Umo2sskVnuLszPS1pfqx3F7FQJ5mcYS9R1GOtLQyOVXnvVNczJM1CRdx7RJNbH
        fRucbb5FkLcFJXYOlAsqKGampPSnVuueQTQ11sLr0lkE+Dihu7NB2ieafhtWhhcSgKVBqBcS0N/mi8wk
        F2TctEfQFQucOmaMwzab4HBwIwn4lnneADn3bvxoItLmjxpdd6oZk6MVJKSDv8ugWcind4lIX4+p4TSU
        519EYogVzjgb4ZyLATISfVFXW8VUWEajazAu64JG1QS/y87YvOEjmGz9kILqNLq72qQr/Hz+K8dLCBiD
        av4e2hv9kZniShKcKG1NYG+9mTCg9N3AJfA9a4AtSEu8+tKJiKZSajE92QPVQjEzCaXukqj0BnmkE3NT
        91BXdBEJEXbwOrEZni67EOR3Wqox8h/E4GlRJIpyXHHI6hsYrP09TLa8B2PDd6kuPaSnSKLpu+5K8GIC
        oOBkK9DdEo28u27ISHCGkz0Vm9VaHLHZKBFwyOo7nDxqiLupPlKQ0j+WDqItqtSQj3ZjfiKTdzSJgVY8
        XFngkSYskISWygCqyMO44LIetns/hBczRGbyWQReNoPFrs9hu+87bNnwJ+za8j52Gr2H/WZf4X7WL3t4
        +hIC5CTgMXrbo1H88DLup7vhlPMOOBxYj0MH1sKGk3E9YgBvBsWwa0fQ0li+okmIJt4XKsbzoJqMgmZx
        QFJ2QAerwjy0VARSTtvg0glDOOz7FvYsrg7s/EQy+LCtAUx3fAjDje/Aau83MNv2HjzdrdDWWieNq+96
        r8JLgqCWBAxioCNVIuBRljsjvxHXvwEOc/27HzOi8SbM48bwv2SJgocxrzkJQcQEVPIIaNVyaFhvAMNQ
        zRSirToEaVGHccV1E04cXIsTNoLw73nnP8BBxh2TrR/AbMdH9IrPYLn7c4Rd92DqFE+gXp+EFxCgu1Oa
        xWmMD+SgvswflQXeOHtyN91wLc6f3ImrnmbwOrMTV86bwt/rAGJDnTDYV81zX7dQ4dIQJCzWcHuCV5VB
        qSglCUFIlUhgtWn7LesFQ9jtX4vd2z6UiDA2/KtEwl7CzmodbqeFS3PWf40X44UE8D9ilsVHKXpaElD+
        wBR2e38Pa5PfwHL7b7F3y29hvu2/YGP6BzjtfwdOln/AdZ/90nniFdmPn/W/FDxBIR/BaKsplJN+NGGS
        Y8gxOx6LmtxdCDj7PmyNfwOTtf+Ok/QEK95xYy4HUxpuafI59u3+AsYGf2FW2oyGehZQr0nCywmAioGr
        E7K+TJRmmyLSzwiW2/4bewz+gyT8DgdMfg87i/dgb/4uXPb/EQHuf8dATx3XtFq/sS+ARrOE6bGnGO9y
        oDbwp5KgCNM0QzEWgIocM/iceh92JOG4w1bYMgibMQ6YMy5YmnyBfYTp9g+5/RnCmRVUSlEp6rNHP17h
        ARoWIyOYkeeh5pEFCrJscIheYL7lP2Gz548MUn+BneW71PDv4Nq5T3DD+3Pqe1uepxMu+ozVD6H3QbFU
        ymxwnPojgCQMQK16ShL8UJ1vjvMuH+GSG0tl1gyH9n8Hqz1fSB6wjF1G7zNOrENfL6tSNv02/RwvIUAH
        rVYoug60VjijpdQO185/CHuL/8XBvX+Bzd53ccz6Xfid/ZQy+Xukha9Heti3aKqJp0G0iE2/wfrAvuyv
        XiyEUn6SGSJa+q1Rl2NeHoriLDOksHa4cn4vXBwMmQK/loKggFgGwitEcLwR7iNdVzR99vwUryBA5wUi
        OA113kBvzTEUZuzEGafPYGv2Z5yw+zN8znyK6MBNSI/YiKw4A2THrkPuLVOMDJTTKI7Bieg3WB90JCzO
        lmCB7q+cyoZKvUASajA/5oGGsmtIinKWArCLw2ZYmX4lGW9ruUaCmfFHsDL7npXj1I9seDle6QGCAK12
        WtLyvQ0X0VfnhKRQQ3g6/RW+pz/AzaCNyLixGQ/jN6MgfRuKbwtsQfPTc5IEXm76DX4B2F89lwfl+AF6
        UhEhJHQG5sbvoq7En8vMFaFX9+GkSMsHN+iEGbWJxe5PscPgr4iK8GUNIQTWq71gBQSIQcSdqcd4fxjG
        O0+ip8wCdyLXIdLnW9yK2Iz8pM0oofGVmcSDXWh8bIHGAlM0lnpgeKCeJaxuHL3G6oXo203JfAUqhQN1
        wh3+FgVXHRSydKblYNxPdUV0sA2FkCmOHqJoOrBOUobGhu9j7Ve/g3xiZZ/ZrIAAHRYZDJeWsjEjC4Vi
        8ByaSvbjQbwh7sduREGKAUozd6Dy/i400Pj2kgOoemCCyCsfISXKCQPPApN+Y18A9l9Q9EDefYqF0zmS
        kMuyuhPahfsY7EpCTUkQbie5I8DbGmdPmMDZfqsUF3Ya/Y2x4O+oryml5zz/fYI+rJgAzgmqxRkoZ+9B
        q/KDZuo8Wkus8TjVkIZvR3WuKeqZKXoq7NGcb8qg+A0uHvsTQi99gKriYEZ03XtCvcbqhagdVJiW52NB
        vo8EZJMALgXtfcyNpUrPFioeX0HCDVf4XrTGOdetjAk6AoRQCg1wYywQwuqtEaCblFrFUlZN2au5hplB
        ZoYiM7r9HrSXWqONd77tCZfHjQ3wOvU3hPt8jfJsY8i7jkI5kwGVakp62/NzY18A9lUtDGOk243XpcjS
        tnF/IzRzDzDeF4/mqlBkp7khxMccZ49vZWb6gQBnh+2sFF/9sdVrEiAgcvZjkpDKkQshH4pAW7EZ+qps
        0Vtlj4yYrbjm9i5u+n1Jr9iH6T4nBrMz6G9yQlupE+QD2dKknjP0peDyUw5ivt+eBBRzLu3QzOdgtDcF
        7XXReHz/IqKCDuG86y4pKywTcOjARozKRLn91gmgay7KeEeKuf2AZe1DzDFny7rPoK7QChE+XyDa/3s0
        FVlipt8V8+PnMNrliuo8c9wKW4OE4HWoLAnmtJheV0IEO4mvzLpqrzAoxpCEVp5ayFiUju7GSBJwAdHX
        7XHh1C4cNP/mHwTsM1uLthbxLkNc5cUkvAEBApS6GvFVWD2WNHn0hlKMDWUjJ90eD1P2oOmJNeanLkA7
        5405mSeXxkFkRm1AmNfHuOH1AbJjNqCl2hdzDHKiccifjP8TUFTNTHZzrOuMP4/Z+RGJTUVvUygeZ3sg
        OuQwLp42lbTAnm1/lwiwpD6orS6jt778HcIbEiDAG6GhJ6jrSUQnjalGfWUG+lu8GLQuM1pfpXi5gL6G
        oyi4Zcwl8Q0ivL9Eash3TJvrUXHPGD31VzAhK5QmKJoY8+fXEdDdxcG2dHrcLW7ls3C6hb7mSDzKpgeE
        HMEFdzN6wBqpRhAEiLK5rZnVKc8XTZ9NAr+AgCUSME/MEFMkohfzc9PMEowPiyGYG71MMi6g6pEd7sQa
        IC7oe6SGbcSjVGaMPFM05JkwcO5H+1MX9LUlQi4TD1R0hoom5v0DdNcc6u9gMI0k81SIM/cw2BqFAmkJ
        HIYHS3URA6S6gASY7/oE7c2VHHLVCBAQ+3UTFGRotYKMXmgWMyDr8ENFwSXk3z2KrEQTPEgxRsnd3ah9
        uFsyvKvShnrBmnrBmMtmG/LSrVCa64f2+nTIR+ulHK6lCuXokgHiOuKzw9EuXyzOpVApPoSsPQrF98/h
        RvBhZgERBL9kTfAxdlAMmRl/iZ7OJulcTv9n9izjFxKwDHFcxaXQxeDYyu0ujPVnoiTXBw/SXfEo8yjq
        ih3QVU6jy6zRW+uA/hobVLLUfZy+A/FB63Hd82NcO/1nKsyP0VXjzDucB8XUU971clajHQyE45yHFh3V
        XFrTN+kFORjvjScBHggPtMcp512SEBJKcON3f4CfzwlM/+wFy8/xFgkQr7HHOOkuEtHBc/ow3HcfVUWB
        qHx0Gu2VLhhsPoaRluMYrD+CRoqmxxm7kBljSMX4JcKufIP78UZoL9+Dmb7dmBs0R23RQSSEUWAV2mJq
        IIJjN2Kg9RpUc9E0KwPTsmSU5V1GyFUrHD9iJAmhrZvehdH6P6G/p4pz0FWk+uxZxlsiQAeNRotZhYJ/
        xyUsLfVCMVmPoY446gB3BrFjGGh2Zorcj4q7O5EZa4gYvzUI9/4aKRFGaCo1xUyvLVSjbiy/DyGeajIu
        8Ft0lzJeFO/GQEsoempZJc7G0awUTI/EctlcIAH74XpkC/Zs/wifffgfuBHmx+XyauMF3ioBz0MESbm0
        LISGVykyGbRcUZu3F2V3tuN+gpFkXITPl4gP/IKB0Qhj7dZYnHTBcKsdbkdtQoz/V2gpMUdP1WGKLAf0
        Vgeiu8afVWEKg0KWREDJfXfpsbm1+ddY983/wOnwbl5XvD/Ub8dPsfoE0HhJvBCzU2Vcw9fwOHkTDf9K
        Mj4mYB2qc0ww2sI7P+1Eee2IvJStSL7+HRoLzTDS7IieSns0sL6oK7yEkY4YKFgfQPsQYz3huBPvihNH
        d8CYZbBYAr3dvNYK7vwyVpEA8XRYA8X0CJTz9IKlTmjU7dyuxfhQBspyjyI5bL1UR8ha99P4o1AMOSI3
        2UAyvoqeMtpyBF0VtqhmH6Egu+oCMdYdD9V8Lk18go6GIARfMcfenZ/C1modnpY+fC3jBVaVAOEFKlZ0
        arX42GKU1V0j0cIpDmF2Mp1lchQUE95YGPfE/OhRlGVvR0rwFyhK34iBKmt0MF3WMG0W3TammDJl1I/D
        1GAS06z4BxWVeFrkh5OOGxj9v0dyfASv8fpfjqwyAbp3BIKIpaVFCqU+yAbKMTosSBBPeWqI21R36Zga
        CUJF3nFU59tipM0Z411u6K1zQk+DIwbaj9H4M5gZToJSQfdHH6ZG8xEX4YRDVl9Lpe+kfIr7X894gVUn
        4AdQyCjnMTHaiaG+BsjH2ljr53Ati6/BCqGcu0ejbtHADOr9LCzMxNNL/Ln/KvtcorS+TBWYw3HEw5Vu
        NFZG4bD113Bz3o3eLvGR9usbL/BPJEBAmiaXxbj0r0VG6Q2TYzWQMSYszOZAvVDCwyx2INb4HSKM8IN6
        PpD7xZsfYXw7RnpTEexjIX2gkZ2ZxH1vZrzAP5mAZUhzlpR/R1M5KstS0d2aj4bKAnS2XMdIvxsGe90x
        3Mu/na6s+30w1BvDirAcAz0JCPbdDxuLNci8k4jFV1R7r8KvRMAPWG41Nc1IS/JDXJgrYoNsERNoiujA
        PUyTW5AQtBbR14xQRNkb7HcK3hft0VRXxLN++edyvzoBy9D5g64tKLVQzKgwJpOh/EkWSgoiUJCbjOa6
        +wykum+DRNM3z9fFign4NfCipq/vm+JfmoDVxxL+D8y4A+4NbBA7AAAAAElFTkSuQmCC
</value>
  </data>
</root>