<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>