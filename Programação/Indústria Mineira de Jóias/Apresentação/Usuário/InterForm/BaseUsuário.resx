<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tÃ­tulo.Imagem" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhOQA5AIcAAAsLDQ4ODg4PEQ8QEhEQERARExITExESFBITFRMUFRIUFhMUFhQVFhUVFhQVFxMW
        GBUWGBUWGRYXGRcYGhQeHhkaGhobHR4fISEhIiMkJScoKSoqKy0tLi4vMTMzNDY3OTw8PD5GQEJDREZH
        SEtLS1JTT1NUVFlWVl9fX2xYaGRkZGtrbHZrdHV0c3t7e41ZL5RcLY5eNZJeMpJfNI5gOpZgMZJgNpRh
        NppiMpNjO5NsS5p2WZd7ZJt+ZYNrfYN9eZ+Dap2Ke6eIbaGMerCUe35/gZ5OjZxTjpxbjp9Skp5Wkp9b
        kqNUj6RajqJOk6tOmaZRkqJVkqVVkqNSlKFVlaRWlKVWlaZVlqpTlKNck6ZUmalUmadcmZ5ijZ1pkp53
        lqJilqFslK5ql6pimqR0lqh5mqt3ord4poOEhIaIhouLjJCOjZSUlJeYmJycnK6ai7GZhKODmraEnqud
        k6Scmrqhi72nlquIpLWFq6uXpqubqLOUqLiYsaSkpamnpqurq7Korq6tsbeptbKysba2tLm0trq6ub29
        vMaumuu2mve6m/S7ncOMrMWYqMeXu9iqpce1p8WrvcW5t8G9vea5pu29pPW8o/m9o/W+qOO+sbvCu/bA
        nsjDvdnGtuvDpezBqvPFp+nKt/TGtqarxKS8ybm9yau10cujxNKuzMa4xNa4zNy71eG/3JvG3bbC1o3L
        6JjH5bba7cHBwcXEwsXFxcfHx8bIycrKys3NzNTIx83QzdPRz93TzsjO1dfE08zU09HR0dTV0tbW1tjY
        1ubPw+/PwPLTxefY1fnhz8bV4+fN4v///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAADMACwAAAAAOQA5AAAI/wCZCRxIsKBBgcU8gQJV7KDDhxAj
        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
        DQK6GpGFGkSgAj9gdyPBOAQhcPHd8pqXJAEBADs=
</value>
  </data>
</root>