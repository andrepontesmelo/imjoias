<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picÍcone.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhOQArAPcAABISFRQUFxERExUVGBcXGxYWGRcXHBgYGxgYHBkZHhoaHhoaHBsbIBwcIR8fIh4e
        ISAgIyAgJSIiJSIiJiQkJyUlKSYmKiYmKikpLSsrLi0tLykpKy4uMTAwMjIyNTQ0NzU1ODIyOjo6PDo6
        QUFBQkJCRkZGR0dHSkVFTklJSUpKTU5OTkpKUU5OUk1NVk5OWlFRUVJSU1JSVVZWV1RUV1BQWlZWWVJS
        XVhYWFtbW1paXV5eX1xcXlRUYV1dYFtbZV5eamFhYWJiYmVlZWdnZ2VlZmdnaWFhbWVlbWNjaGlpaWlp
        ampqampqbWxsbG9vb25ubmxsbmZmcWVldG1tcWlpd2pqeW9vfnBwcXNzc3FxcnR0dXd3d3JydXd3enR0
        fnh4eHp6e3t7fXp6f319fX5+fn19f3FxgXV1hX5+gHp6hnl5gX19jnp6ind3iX9/kYKCgoGBgYSEhIaG
        h4GBhomJiYqKioyMjY+Pj42Nj4uLj4GBkoWFloaGmYmJmomJnoyMnoiIlpGRkZCQkJKSkpOTk5GRkpOT
        lJSUlZeXl5WVlpSUmpiYmZqampiYmpycnZ+fn52dnpubnI+Po5GRpZ+foJWVqZeXrZmZqpmZrqCgoaOj
        o6KioqWlpaampqWlpqenqKioqaqqqqysrK6ur62traCgtqKiuaWlu62tvbCwsLGxsbOzs7KysrW1tba2
        tre3t7e3uLi4uLm5ubu7u7q6urm5u7y8vL6+vqqqwq2txLGxyrS0zrm5z7u71L292MDAwMPDw8LCwsXF
        xcTExMbGxsXFxsnJycjIyMvLy8zMzM/Pz8vLzMfHx8LC3MPD0dHR0dLS0tTU1dbW1tXV1tnZ2dra29nZ
        2t3d3d/f397e3t3d3tzc3NfX18bG4crK483N6dLS5tnZ79XV8tbW9Nvb+eDg4OLi4uHh4eXl5enp6evr
        6+zs7O3t7e/v7+7u7ufn5+Pj9/Dw8PPz8/X19fb29vf39/T09Pj4+Pn5+fr6+vv7+/z8/P39/f7+/v//
        /yH5BAEAAP8ALAAAAAA5ACsAAAj/AP8JHEiwoMGDCBP685ewocOHA/3ZSwdNGKxVqlp52rJDFT2IIA36
        20fvXbpqx2aFIkRGS5lCoGYhm3aOW54JIg6F3CmRokVSo1TBArbsHL19/PopFYiPlAMFIPLtLLivnslq
        yWiJUlRGS5g7jTyBumWO3b18/Qr6S6qPlgcGGbhN/dczWjBZqkaNavUqGLp76Y7BUkVI1j2GC//1y3dP
        XTZpxFqV6dDAQq2EVa8mqxWKqxYyhTzJUhmqVahN7/oFg6OEi5BH6vjx04dPnrljrR7dERMliQwMASAw
        Qghv2d1VpFS9InpuXj7Z/abBYbIlzJxq/ZrdYRJGCx5XrDTZ/9HCI0aMFiyOIPnRZlIPAQewMDQYJowm
        WM2moWM3T1/a+f4owwQMTtjRyTTyLANJGVs4QcQSSdBwwg0uvIAGGkeccsoZmHzzBgAEqDAfQf7UQco8
        /SC2EGL97HPPOsPEMcQTXGTBxA4xrKCCDUgAcYQfe0jxjCl/lANOG+AcOck4lBSgwAf2HORJJPUspJRs
        tMmDTjKsVDLHEj7YoIILLdxwwxQ9vJEKJXuE84sV8WTixjjgWJHLLmec4ccPDSQQ10HBxKEOO+dQU4wr
        nNyxRRA5nvADEDWowccPlLzxhhu89KFLPLxQIo43VnyTyyW6ZHKDFFVQMYYeXmgQQAWXGf+UTQ6iVJJH
        Gl340IIOLKBwxBE3YHJKFb14s8cuf4QwAip9WOILKnxgsgcKLLDQAg9R2LDCa8d0gwsOATygyEH2dNDC
        DzocoUYVVZyCxgu8+NJHOOX04cw4k5ySyxVWWHLFEVd8sQYddOiwQhy0UGNNKGFEEo09+2QDRgEPaDFi
        RCqccQkbffRyyiS/oIHBH5nq4g0glmQyhZktrMCDDSnkUIdMy3CiBSvt9MMPNHYoo4476lATRwENxHCx
        QP54Yco4mfThS6e7mHLGJJdUcUUgawxMxQpGkDIMNcDEMUgw8+BDzzFwoGPPPe0sw0UtwszCyiZMFIAA
        CPUc5Agb3vj/O4kfQATeggza4oAIKLIUU0sZiLiD1jp4iKLNPO7A0wwR0SADDCyhzBBHHZHMMgwkEgBg
        gTUH2VIDIGsg8YUXPCzRCSvDKONJHT/fY486eNSijz70sCOHJsUgg0sriaxABBF3bMKKFnI0Aow6+DRD
        wgASxHLQNR6EcQgosQhzCCLs0PPcMYOUfY+WJkajDDC0POEEHJu0QossWeSgRDP46LOJJsdIBz76QY0d
        ECACiDgIPmCwjNzRwxWaQJE+6kEMOTQjGsfARSmgsIMwFCISoICDELRQC3XIYx3iaQU2+GEPVySiGcZT
        hR1SQAAIbOFodHnCw9Ymj1cgolvGiQQT/8rwCFHwRRArAEM16KGPZtQBEnL5xzxmEQlzWAMauBiEEMTA
        BUGQghRZAAACYIDDEnmiGxjEhSKI8AQ7MCISjMiCE0RRjUE1gwyMaAdduiEIV0TDOKMoQwqg4IQ5JEIS
        M2gQLdwxj1AUIAAd+IhBOMEEQmyCFK3gxBNmoAl10EMdpKhDNvihGGskIhnwQMcyVEEELshBDp0YhSZi
        oARCpMMe7wCDJjaBjX30AxcbSIAFrnEQXKQgDK7IhmMgsYVgCKQetKgDOrJhl07kQH5ksIMihjCDJ9wB
        G+6QmCKAUY9+3OMOrDjGMpAhCzt8QJiyOEg2YhAKbTCkHqpgBDwItf+MRASBEHVoxCboVgQczGId9tBE
        GSCBC3n44x2EwIU5sFERMJTBDnOQxCgUYYIARGBcBsFHDo6hDXNIYzVbLMMc7hAHGAyBC7c4Rzo2cYdC
        KKMe+2hFI4IRDWngJgtbwMMcBtEJOAzBCU4IBTqgEUYGPKGMRSiEIgrxCE7AYQdCUIQ03NENOMjBE9bQ
        Rz5uMYplZIOijACDIBCBiIGKIQZFAEMpzgEMLjCiE8vQBzsIUYAEiEgkZIjBFhoRQGLcQQ6yWIc/0sEJ
        TUSjGt1ABiO0UFM7aEIQRXgC9JqhDVoIAQ6c6EY/0iEGYVDDHI+5AwKgIsmCcGIIjxiGPPihDVD/tMIc
        6dBGMHazibt6ghA7mAEZ5sAN6cgBEqJghz7MoYWiqGOpTBDFLWABlDhI4AAYqMZBiPGEZVjDHNW4RRzI
        EAlBMOIRbyUDGJpRDWnIQQiiYMU+8mFJaFgjHeYYBhFWMRhSiGIIeGDFLYaxjFGIAAATeMVBzpGDUvzv
        NFtYQRCYUAtrvIIHkOCEOiYoCU1MwxyptIMgWNGKL0YiCEooQyNocQw8cAKc9dBHNHwQLkMoMAVEcAIh
        lNGNUAxhC3Ywxz66UQZi1FEd3BiEIl7xioyIAQpgoCwtgjGHJygiGOywBy1C8Y4VWUMLNZSPSISAhTmw
        Yh36QAYhaGENdaij/4KhwMUrWDEKMgTBK4IYxibKIAcucCId8mBFHIaRjnzoYxmC6MZjihEKHiigAWQU
        SR0IkYxsrEMdtIjcXV4BCSxgIQ5gYAQwNvGELdwhFPToBkxkEY184ANt2NgGNYzxiRykQQxGoEEJMtAA
        BoDgHlKSwzCCcQtZNIIJSvicUPCQBTyUYRXzqIYdEIGMaPQDcq/ghjWkUYxZ7ibXJLCABBqAAAMkgAEP
        cIAIsnEQYeAADnFgxC1cIYchFGIU6XjHLcpwC1pgox/vwMMssmENahDDCV8RwxJkQAIKUOAp5WZAAg7A
        gAp8oAQzWAIi1CHPFMBBC6KQhzxKAQZZZAMpyf64jja4QQ1hQAEOeVC4DTqAAQtAQAEEODcCEPCACnSA
        BDEgghgY0YpmXEMdVVJgDDqsDP/UohDSwO80QBGFQxjCDAsHQQYsMAEGlBsBB1jAAyzwARPQgAhEfEUy
        sLEOfIDEH0xoRTXQYQ5qRMILiBAEGZqggg5oYAMSwHkCEuAkB/gc6EMIAyNUYYxuwOMeaZmLPzAaiasv
        QQUe4EAGKEBuBBDASRAgewlkUIQ0PELtbHf7XBByCyyQQANdJ4DnCcAACPh8BCvYgRgSQQpiTCMd8yDl
        6h/ijrp6wAEOED1c43B6ZnBjHVIZ/urzwQ1JGEEMiBiFMKRxjtlKfyoBAQA7
</value>
  </data>
</root>